package io.swagger.api.impl;

import java.util.ArrayList;
import java.util.List;

import javax.enterprise.context.RequestScoped;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.SecurityContext;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import io.swagger.api.ApiResponseMessage;
import io.swagger.api.NotFoundException;
import io.swagger.api.PostsApiService;
import io.swagger.model.Post;

@RequestScoped
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaResteasyServerCodegen", date = "2018-08-06T19:44:40.063-04:00")
public class PostsApiServiceImpl implements PostsApiService {
	// generated by swagger code gen, modified by Anne

	@Override
	public Response postsGet(SecurityContext securityContext) throws NotFoundException {
		// do some magic!
		ObjectMapper mapper = new ObjectMapper();

		try {
			String jsonString = mapper.writeValueAsString(createPosts());

			return Response.ok().entity(new ApiResponseMessage(ApiResponseMessage.OK, jsonString)).build();
		} catch (JsonProcessingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return Response.ok().entity(new ApiResponseMessage(ApiResponseMessage.ERROR, e.getMessage())).build();
		}
	}

	private Post[] createPosts() {
		Post[] posts = new Post[20];
		List<String> titles = createTitles();
		Integer userId = 0;
		for (int i = 1; i <= 20; i++) {
			int index = i - 1;
			if (i % 3 == 0) {
				userId = 3;
			} else if (i % 3 == 2) {
				userId = 2;
			} else {
				userId = 1;
			}
			posts[index] = createPost(i, userId, titles.get(index));
		}
		return posts;
	}

	private Post createPost(Integer id, Integer userId, String title) {
		Post p = new Post();
		p.setId(id);
		p.setUserId(userId);
		p.setTitle(title);
		return p;
	}

	private List<String> createTitles() {
		List<String> titles = new ArrayList<>();
		titles.add("sunt aut facere repellat provident occaecati excepturi optio reprehenderit");
		titles.add("qui est esse");
		titles.add("ea molestias quasi exercitationem repellat qui ipsa sit aut");
		titles.add("eum et est occaecati");
		titles.add("nesciunt quas odio");
		titles.add("dolorem eum magni eos aperiam quia");
		titles.add("magnam facilis autem");
		titles.add("dolorem dolore est ipsam");
		titles.add("nesciunt iure omnis dolorem tempora et accusantium");
		titles.add("optio molestias id quia eum");
		titles.add("et ea vero quia laudantium autem");
		titles.add("in quibusdam tempore odit est dolorem");
		titles.add("dolorum ut in voluptas mollitia et saepe quo animi");
		titles.add("voluptatem eligendi optio");
		titles.add("eveniet quod temporibus");
		titles.add("sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio");
		titles.add("fugit voluptas sed molestias voluptatem provident");
		titles.add("voluptate et itaque vero tempora molestiae");
		titles.add("adipisci placeat illum aut reiciendis qui");
		titles.add("doloribus ad provident suscipit at");
		return titles;
	}

}
